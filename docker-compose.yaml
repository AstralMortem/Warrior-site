version: '3'
services:
  db:
    image: postgres
    container_name: pgdb
    environment:
      POSTGRES_DB: "warrior"
      POSTGRES_USER: "warrior"
      POSTGRES_PASSWORD: "warrior"
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    expose:
      - 5432


  backend:
    container_name: warrior-backend
    build: 
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: bash -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput && gunicorn admin.wsgi:application --workers 4 --log-level debug --timeout 120 --bind 0.0.0.0:8000 --reload"
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.warrior-tkd.pp.ua`)"

  frontend:
    container_name: warrior-frontend
    build: 
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    expose:
      - 3000
    depends_on:
      - backend
      - reverse-proxy
    env_file:
      - ./.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`warrior-tkd.pp.ua`)"

  reverse-proxy:
    image: traefik:v2.10
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yaml:/etc/traefik/traefik.yaml
      - ./docker/traefik/ssl:/ssl-certs/



volumes:
  pgdbdata: null

networks:
  default:
    name: proxy
    external: true

    